# dpstream server Kubernetes deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dpstream-server
  namespace: dpstream
  labels:
    app: dpstream-server
    version: v1.0.0
spec:
  replicas: 2  # High availability with 2 instances
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0

  selector:
    matchLabels:
      app: dpstream-server

  template:
    metadata:
      labels:
        app: dpstream-server
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"

    spec:
      # Security context
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000

      # Service account
      serviceAccountName: dpstream-server

      # Node affinity for GPU nodes
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: nvidia.com/gpu
                operator: Exists
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: dpstream-server
              topologyKey: kubernetes.io/hostname

      containers:
      - name: dpstream-server
        image: dpstream/server:latest
        imagePullPolicy: Always

        # Resource requirements
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
            nvidia.com/gpu: 1
          limits:
            memory: "4Gi"
            cpu: "2000m"
            nvidia.com/gpu: 1

        # Environment variables
        env:
        - name: RUST_LOG
          value: "info"
        - name: SERVER_PORT
          value: "47989"
        - name: MAX_CLIENTS
          value: "8"
        - name: TAILSCALE_AUTH_KEY
          valueFrom:
            secretKeyRef:
              name: dpstream-secrets
              key: tailscale-auth-key
        - name: TAILSCALE_HOSTNAME
          value: "dpstream-k8s"
        - name: DOLPHIN_PATH
          value: "/usr/bin/dolphin-emu"
        - name: ROM_PATH
          value: "/app/roms"
        - name: SAVE_PATH
          value: "/app/saves"

        # Ports
        ports:
        - name: control
          containerPort: 47989
          protocol: TCP
        - name: video-stream
          containerPort: 47998
          protocol: UDP
        - name: audio-stream
          containerPort: 47999
          protocol: UDP
        - name: metrics
          containerPort: 8080
          protocol: TCP

        # Probes
        livenessProbe:
          httpGet:
            path: /health
            port: 47989
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3

        readinessProbe:
          httpGet:
            path: /ready
            port: 47989
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3

        startupProbe:
          httpGet:
            path: /health
            port: 47989
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30

        # Volume mounts
        volumeMounts:
        - name: rom-storage
          mountPath: /app/roms
          readOnly: true
        - name: save-storage
          mountPath: /app/saves
        - name: config-storage
          mountPath: /app/config
          readOnly: true
        - name: tmp-storage
          mountPath: /tmp

        # Security context
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: false  # Dolphin needs write access

      # Volumes
      volumes:
      - name: rom-storage
        persistentVolumeClaim:
          claimName: dpstream-roms-pvc
      - name: save-storage
        persistentVolumeClaim:
          claimName: dpstream-saves-pvc
      - name: config-storage
        configMap:
          name: dpstream-config
      - name: tmp-storage
        emptyDir:
          sizeLimit: 1Gi

      # Tolerations for GPU nodes
      tolerations:
      - key: nvidia.com/gpu
        operator: Exists
        effect: NoSchedule

---
# Service Account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dpstream-server
  namespace: dpstream

---
# Service
apiVersion: v1
kind: Service
metadata:
  name: dpstream-server-service
  namespace: dpstream
  labels:
    app: dpstream-server
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
spec:
  type: LoadBalancer
  ports:
  - name: control
    port: 47989
    targetPort: 47989
    protocol: TCP
  - name: video-stream
    port: 47998
    targetPort: 47998
    protocol: UDP
  - name: audio-stream
    port: 47999
    targetPort: 47999
    protocol: UDP
  - name: metrics
    port: 8080
    targetPort: 8080
    protocol: TCP
  selector:
    app: dpstream-server

---
# Horizontal Pod Autoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: dpstream-server-hpa
  namespace: dpstream
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: dpstream-server
  minReplicas: 2
  maxReplicas: 8
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 30