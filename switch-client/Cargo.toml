[package]
name = "dpstream-client"
version = "1.0.0"
edition = "2021"
authors = ["hephaex@gmail.com"]
description = "Dolphin Remote Gaming Nintendo Switch Client"
license = "MIT"
repository = "https://github.com/hephaex/dpstream"

[lib]
crate-type = ["staticlib"]

[dependencies]
# Core no-std support
no-std-compat = "0.4"
linked_list_allocator = "0.10"
spin = "0.9"
heapless = "0.8"              # Collections without allocation
nb = "1.1"                    # Non-blocking I/O

# Nintendo Switch Support (placeholders - actual implementations needed)
# libnx-rs = { git = "https://github.com/aarch64-switch-rs/libnx-rs" }
# nx = { git = "https://github.com/aarch64-switch-rs/nx" }

# Network (no-std compatible)
smoltcp = { version = "0.11", default-features = false, features = ["proto-ipv4", "proto-udp", "proto-tcp"] }

# Error Handling (no-std)
# anyhow is not no-std compatible - using custom error types

# Serialization (no-std)
serde = { version = "1.0", default-features = false, features = ["derive"] }
serde-json-core = "0.5"      # no-std JSON serialization
postcard = "1.0"             # Compact binary serialization

# Crypto (no-std)
aes = "0.8"
chacha20poly1305 = "0.10"
sha2 = "0.10"
rand_core = "0.6"

[features]
default = ["crypto", "network"]
crypto = ["aes", "chacha20poly1305", "sha2"]
network = ["smoltcp"]
debug = []                    # Debug features for development

[profile.release]
lto = true
opt-level = "z"              # Optimize for size
codegen-units = 1
panic = "abort"
strip = true                 # Strip debug symbols

[profile.dev]
opt-level = 1               # Some optimization for faster dev builds
debug = true
strip = false

[target.aarch64-nintendo-switch-freestanding]
rustflags = ["-C", "target-cpu=cortex-a57", "-C", "target-feature=+neon"]